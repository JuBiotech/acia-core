# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - build
  - test
  - deploy

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

test:
  image: python:3.8
  stage: test
  script:
    - pip install --upgrade pip
    - python setup.py install
    - pip install tox flake8  # you can also use tox
    - tox -e py38,flake8
    #- pip install coverage unittest-xml-reporting
    #- python -m xmlrunner discover ./tests/ -o reports/
    #- coverage run --source=./acia -m unittest discover ./tests "*test*.py" -v
    #- coverage report
    #- coverage xml
    - cat coverage.xml
#  coverage: 'TOTAL.*\s+(\d+%)'
  artifacts:
    when: always
    reports:
      cobertura: coverage.xml
      junit:
        - reports/TEST-*.xml

run:
  stage: build
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

.deploy_common:
  # common config
 rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'



upload_package:
  stage: deploy
  # dot pass artifacts from other stages
  dependencies: []
  cache: []
  extends: .deploy_common
  script:
    - set -e
    - pip install twine bump2version
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git log
    # list tags
    - git tag
    - bump2version patch
    - python setup.py sdist bdist_wheel
    - ls -all dist/
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
    - git remote set-url origin "https://${CI_PUSH_NAME}:${CI_PUSH_TOKEN}@jugit.fz-juelich.de/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - git push -o ci.skip --tags origin HEAD:${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - dist/



pages:
  stage: deploy
  extends: .deploy_common
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd docs ; make html
    - mv _build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
